==9540== Helgrind, a thread error detector
==9540== Copyright (C) 2007-2017, and GNU GPL'd, by OpenWorks LLP et al.
==9540== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==9540== Command: ./race
==9540== 
==9540== ---Thread-Announcement------------------------------------------
==9540== 
==9540== Thread #4 was created
==9540==    at 0x49979F3: clone (clone.S:76)
==9540==    by 0x49988EE: __clone_internal (clone-internal.c:83)
==9540==    by 0x49066D8: create_thread (pthread_create.c:295)
==9540==    by 0x49071FF: pthread_create@@GLIBC_2.34 (pthread_create.c:828)
==9540==    by 0x4853767: ??? (in /usr/libexec/valgrind/vgpreload_helgrind-amd64-linux.so)
==9540==    by 0x1092C3: main (race.c:19)
==9540== 
==9540== ---Thread-Announcement------------------------------------------
==9540== 
==9540== Thread #3 was created
==9540==    at 0x49979F3: clone (clone.S:76)
==9540==    by 0x49988EE: __clone_internal (clone-internal.c:83)
==9540==    by 0x49066D8: create_thread (pthread_create.c:295)
==9540==    by 0x49071FF: pthread_create@@GLIBC_2.34 (pthread_create.c:828)
==9540==    by 0x4853767: ??? (in /usr/libexec/valgrind/vgpreload_helgrind-amd64-linux.so)
==9540==    by 0x1092C3: main (race.c:19)
==9540== 
==9540== ----------------------------------------------------------------
==9540== 
==9540== Possible data race during read of size 8 at 0x10C018 by thread #4
==9540== Locks held: none
==9540==    at 0x10920B: square (race.c:9)
==9540==    by 0x485396A: ??? (in /usr/libexec/valgrind/vgpreload_helgrind-amd64-linux.so)
==9540==    by 0x4906AC2: start_thread (pthread_create.c:442)
==9540==    by 0x4997A03: clone (clone.S:100)
==9540== 
==9540== This conflicts with a previous write of size 8 by thread #3
==9540== Locks held: none
==9540==    at 0x109215: square (race.c:9)
==9540==    by 0x485396A: ??? (in /usr/libexec/valgrind/vgpreload_helgrind-amd64-linux.so)
==9540==    by 0x4906AC2: start_thread (pthread_create.c:442)
==9540==    by 0x4997A03: clone (clone.S:100)
==9540==  Address 0x10c018 is 0 bytes inside data symbol "accum"
==9540== 
==9540== ----------------------------------------------------------------
==9540== 
==9540== Possible data race during write of size 8 at 0x10C018 by thread #4
==9540== Locks held: none
==9540==    at 0x109215: square (race.c:9)
==9540==    by 0x485396A: ??? (in /usr/libexec/valgrind/vgpreload_helgrind-amd64-linux.so)
==9540==    by 0x4906AC2: start_thread (pthread_create.c:442)
==9540==    by 0x4997A03: clone (clone.S:100)
==9540== 
==9540== This conflicts with a previous write of size 8 by thread #3
==9540== Locks held: none
==9540==    at 0x109215: square (race.c:9)
==9540==    by 0x485396A: ??? (in /usr/libexec/valgrind/vgpreload_helgrind-amd64-linux.so)
==9540==    by 0x4906AC2: start_thread (pthread_create.c:442)
==9540==    by 0x4997A03: clone (clone.S:100)
==9540==  Address 0x10c018 is 0 bytes inside data symbol "accum"
==9540== 
2870
==9540== 
==9540== Use --history-level=approx or =none to gain increased speed, at
==9540== the cost of reduced accuracy of conflicting-access information
==9540== For lists of detected and suppressed errors, rerun with: -s
==9540== ERROR SUMMARY: 36 errors from 2 contexts (suppressed: 342 from 18)
